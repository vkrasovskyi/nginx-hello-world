# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the "master" branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Create and configure a Workload Identity Provider for GitHub (https://github.com/google-github-actions/auth#setting-up-workload-identity-federation)
#
# 3. Change the values for the GAR_LOCATION, GKE_ZONE, GKE_CLUSTER, IMAGE, REPOSITORY and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke-kustomize

name: Build and Deploy to GKE

on:
  push:
    branches: [ "master" ]

env:
  PROJECT_ID: kube-ml-365607
  GAR_LOCATION: us-central1 # TODO: update region of the Artifact Registry
  GKE_CLUSTER: terraform-gke    # TODO: update to cluster name
  GKE_ZONE: us-central1-a   # TODO: update to cluster zone
  DEPLOYMENT_NAME: webapp-dpl # TODO: update to deployment name
  #REPOSITORY: samples # TODO: update to Artifact Registry docker repository
  IMAGE: sharks/web-app
  GKE_TRUST: ${{ secrets.GKE_SA_KEY }}
  CRED: '{   "type": "service_account",   "project_id": "kube-ml-365607",   "private_key_id": "b696588e199f6ed044b8b196981f2a921387c2aa",   "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDZqpQKghC1MyZt\nE2NDlsvkOSfcacSUs2f0lJ0d5SIFd1zaVtGgGgBwOkeVruilEbyLylI0aLdArrdh\nGilO78g1ELb4yJUUEdOI/fHy6mfi+6/Bb9VtoBIoKXlM3RbqpodpsXn+NOcVe1ST\njXPWbLS8OqlO+0zlRlv4xC1UD3SC4LIB+Q8526is02puOFY5qHVVbwBTZsE+1C4p\nH9MyrBvYFmv7z08GLxUHcjeuAdkbgGStqQ55TbkmnxUBibXcH0g6TfliW0Ut2AhZ\nYTF14isCi5nGDPUKwf3T+ak3kycAWv6nN3Qrqlq9ptetGaDl0PshPDvuECh87quM\nbJLXq2LJAgMBAAECggEALTbTQKmK6fDhmwfLd1dELDi5MH5iANeRkQsr5fFaU1Nb\nnNkq+zxbefSJOS0Xk25vQYR59fwIkO2aFxgVm5mQd4Fs2Jnl6cDYNZ02nJSXlt1c\nQWzHI1n8W45d7ZsBbyW/fDOLGUSI+fvf8jSQauqy0mTHFap66ydl5HNvzQXW2HaN\nQDZ+fBS3K+IY43Ok/La2TuzPIEuzU2/Zkfg3N8ib7T4YQ4GRPv2vVkfUs/JQtf2R\n3l3ktPr+Rd8tOnUIJEZOJEm9oo3kOHH7C/bBDMdmQxrWHz8QktNsZNSS7zXOpz54\nUN7UjJkxCoZnEqVUDims7fJ3XKZSL/IPjIJhcEwleQKBgQDukLLH1TXsiIjfYsLZ\nqItGL+mKWUHY/jRu9RRc6AsvW3fOHZogEVy1UnVeR9f1kTrtHY2Igm117+oTyhve\nqTUFBu+FL6ewqNcKwwFItgft6hpqqAubYBsLOGUb4p+9Vn8uTCpdpskyNt4l4ooy\n+k1H//QM4U13nKsZPflxt1v4hQKBgQDpkuI0gJQI6Sd8W3RGWue9hmba32XDTsV4\nJKNiDrg1qzB+yoNI4LOtm1WvBsj3MeIa0/NV/trcXPAzWQdJVEkKY7C1M28zVGYf\njza3hIYrtdZD7Fj3KzYuITe3hky10BYsdJqr2Y2krnkBzhaJ3TpSSFxFXnk+AGMs\nVfRF1Hf2dQKBgQCB2hD15H+td8PIk6EriCoG0h10SJEm43b2zj9/Mm6kIE1dy48Q\n1WJ476Ei6EgMSjigx+052IRsJWJr0x7IW6GYUuYcwIuuBLjICsywHyTBwyMN2to2\ngGE4AkJGo1v/Ww1uzdZhk18ADg1s4ZoHlWZrQk48lIXuDUC0RJ953iwZYQKBgEbb\nGSYGL2I4oJLYB4DkSNK0t/UDuhIyjjLxImM3xef6A58i/gqYp8ktiyOqckKS7l1n\nGLVot6oLw45AHra/C91L+qotbTlsDALc5iNr32vZIKPASgjJIgmCaC2TXyf0dRWN\nVfJ178Mabnj+tNWjt/KIIv2kODF32p3zgUPBvZaVAoGAOF/VkIYa3c0yFxpkWCLq\n6OOqO9Rogl6wmMWps0IDkrJyUNDvyaiPv7klMIIGp0rhg5tYgeYpeQ4cBNNR81gN\ntUXIwzOme/II0qROg8qsom7VdjkXAxbR5mD6dcfxmbSFUkA11JmoXSX4/w0cJlrC\n7dbYxJK+QLFvBZgthZ+FWFg=\n-----END PRIVATE KEY-----\n",   "client_email": "terraform-gke@kube-ml-365607.iam.gserviceaccount.com",   "client_id": "103449481235007677191",   "auth_uri": "https://accounts.google.com/o/oauth2/auth",   "token_uri": "https://oauth2.googleapis.com/token",   "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",   "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/terraform-gke%40kube-ml-365607.iam.gserviceaccount.com" }'

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Build the Docker image
      run: |
        docker build . --file Dockerfile --tag web-app:last
        docker image tag web-app:last sharks/web-app:$GITHUB_SHA
        docker images
    - name: DockerHub login
      run: docker login --username sharks --password ${{ secrets.PASS_DOCKHUB }}
    - name: push dockerhub
      run: docker image push sharks/web-app:$GITHUB_SHA


    # Alternative option - authentication via credentials json
    - id: 'auth'
      name: google_authenticate
      uses: 'google-github-actions/auth@v0'
      with:
         credentials_json: '${{ env.CRED }}'
        
    - name: Show gcloud
      run: |
        gcloud container clusters list
        

    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: projects/kube-ml-365607/locations/us-central1/clusters/terraform-gke
        #location: ${{ env.GKE_ZONE }}

    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        # replacing the image name in the k8s template
        cd ./kube
        ./kustomize edit set image sharks/web-app:latest=$IMAGE:$GITHUB_SHA
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
